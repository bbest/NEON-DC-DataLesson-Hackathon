tower_lonlat <- c(42.5378, -72.1715)
library(raster)
#best for importing shapefiles
library(rgdal)
#plotting
library(ggplot2)
options(stringsAsFactors = FALSE)
#set the working directory
#setwd("~/Documents/data/1_DataPortal_Workshop/1_WorkshopData")
setwd("~/github/NEON-DC-DataLesson-Hackathon/code/1_WorkshopData")
library(raster)
#best for importing shapefiles
library(rgdal)
#plotting
library(ggplot2)
options(stringsAsFactors = FALSE)
#set the working directory
#setwd("~/Documents/data/1_DataPortal_Workshop/1_WorkshopData")
setwd("~/github/NEON-DC-DataLesson-Hackathon/code/1_WorkshopData")
#import imagery
chm <- raster("NEON_RemoteSensing/HARV/CHM/HARV_chmCrop.tif")
chm
summary(chm)
library(leaflet)
chm_mer = projectRasterForLeaflet(x)
chm_mer = projectRasterForLeaflet(chm)
pal = colorNumeric(rev(brewer.pal(11, 'Spectral')), values(chm_mer), na.color = "transparent")
library(RColorBrewer)
pal = colorNumeric(rev(brewer.pal(11, 'Spectral')), values(chm_mer), na.color = "transparent")
pal = colorNumeric(rev(brewer.pal(11, 'Spectral')), values(chm_mer), na.color = "transparent")
leaflet() %>%
addTiles() %>%
leaflet() %>%
addTiles()
leaflet() %>%
addTiles() %>%
addProviderTiles("Stamen.TonerLite", options = providerTileOptions(noWrap = TRUE)) %>%
addRasterImage(chm_mer, colors=pal, project=F, opacity=0.8) %>%
addLegend(pal=pal, position='bottomright', values=values(chm_mer), title='CHM')
install.packages("animation")
library(ggmap)
map <- get_map()
ggmap(map)
map <- get_map(source = "stamen", maptype = "watercolor")
ggmap(map)
map <- get_map(source = "stamen", maptype = "Stamen.TonerLite")
ggmap(map)
map <- get_map(source = "stamen", maptype = "toner-lite")
ggmap(map)
map <- get_map(source = "stamen", maptype = "toner-background")
ggmap(map)
??map
??maps
maps('states')
library(maps)
map('states')
map('state')
map('state', region = c('massachusetts'))
m = map('state', region = c('massachusetts'))
bbox(m)
map <- get_map(
location = 'massachusetts',
source = "stamen", maptype = "toner-background")
ggmap(map)
map <- get_map(
location = 'massachusetts', zoom = 6,
source = "stamen", maptype = "toner-background")
ggmap(map)
map <- get_map(
location = 'massachusetts', zoom = 8,
source = "stamen", maptype = "toner-background")
ggmap(map)
map <- get_map(
location = 'massachusetts', zoom = 7,
source = "stamen", maptype = "toner-background")
ggmap(map)
map <- get_map(
location = 'massachusetts', zoom = 8,
source = "stamen", maptype = "toner-background")
ggmap(map)
rj2=get_googlemap(center=c(lon=-42.482, lat=-22.65), zoom=11,maptype=”terrain”,
markers=”&markers=color:blue|label:1|-22.684114,-42.485386&markers=color:blue|label:2|
-22.632589,-42.467131″, format=”png8″, filename=”your file”)
library(ggplot2)
## Not run:
n <- 50
df <- expand.grid(x = 1:n,y = 1:n)[sample(n^2,.5*n^2),]
qplot(x, y, data = df, geom = 'tile')
qplot(x, y, data = df, geom = 'tile') + theme_nothing()
qplot(x, y, data = df, geom = 'tile')
qplot(x, y, data = df, geom = 'tile') + theme_nothing()
qplot(1:10, 1:10) +
annotation_custom(
grob = ggplotGrob(qplot(1:10,1:10)),
8, Inf, -Inf, 2
)
bbox(chm)
??wgs
projectExtent(chm, crs=CRS('+proj=longlat +datum=WGS84'))
projectExtent(chm, crs=CRS('+proj=longlat +datum=WGS84'))
bbox(projectExtent(chm, crs=CRS('+proj=longlat +datum=WGS84')))
?projectExtent
extent(projectExtent(chm, crs=CRS('+proj=longlat +datum=WGS84')))
qmap("houston", zoom = 14, color = "bw", extent = "device", legend = "topleft")
HoustonMap +
stat_density2d(aes(x = lon, y = lat, fill = ..level.., alpha = ..level..),
bins = 4, geom = "polygon", data = violent_crimes) +
scale_fill_gradient("Violent\nCrime\nDensity") +
scale_alpha(range = c(.4, .75), guide = FALSE) +
guides(fill = guide_colorbar(barwidth = 1.5, barheight = 10)) +
inset(
grob = ggplotGrob(ggplot() + overlay +
scale_fill_gradient("Violent\nCrime\nDensity") +
scale_alpha(range = c(.4, .75), guide = FALSE) +
theme_inset()
),
xmin = attr(houston,"bb")$ll.lon +
(7/10) * (attr(houston,"bb")$ur.lon - attr(houston,"bb")$ll.lon),
xmax = Inf,
ymin = -Inf,
ymax = attr(houston,"bb")$ll.lat +
(3/10) * (attr(houston,"bb")$ur.lat - attr(houston,"bb")$ll.lat)
)
HoustonMap <- qmap("houston", zoom = 14, color = "bw", extent = "device", legend = "topleft")
HoustonMap +
stat_density2d(aes(x = lon, y = lat, fill = ..level.., alpha = ..level..),
bins = 4, geom = "polygon", data = violent_crimes) +
scale_fill_gradient("Violent\nCrime\nDensity") +
scale_alpha(range = c(.4, .75), guide = FALSE) +
guides(fill = guide_colorbar(barwidth = 1.5, barheight = 10)) +
inset(
grob = ggplotGrob(ggplot() + overlay +
scale_fill_gradient("Violent\nCrime\nDensity") +
scale_alpha(range = c(.4, .75), guide = FALSE) +
theme_inset()
),
xmin = attr(houston,"bb")$ll.lon +
(7/10) * (attr(houston,"bb")$ur.lon - attr(houston,"bb")$ll.lon),
xmax = Inf,
ymin = -Inf,
ymax = attr(houston,"bb")$ll.lat +
(3/10) * (attr(houston,"bb")$ur.lat - attr(houston,"bb")$ll.lat)
)
violent_crimes <- subset(crime,
offense != "auto theft" &
offense != "theft" &
offense != "burglary"
)
HoustonMap +
stat_density2d(aes(x = lon, y = lat, fill = ..level.., alpha = ..level..),
bins = 4, geom = "polygon", data = violent_crimes) +
scale_fill_gradient("Violent\nCrime\nDensity") +
scale_alpha(range = c(.4, .75), guide = FALSE) +
guides(fill = guide_colorbar(barwidth = 1.5, barheight = 10)) +
inset(
grob = ggplotGrob(ggplot() + overlay +
scale_fill_gradient("Violent\nCrime\nDensity") +
scale_alpha(range = c(.4, .75), guide = FALSE) +
theme_inset()
),
xmin = attr(houston,"bb")$ll.lon +
(7/10) * (attr(houston,"bb")$ur.lon - attr(houston,"bb")$ll.lon),
xmax = Inf,
ymin = -Inf,
ymax = attr(houston,"bb")$ll.lat +
(3/10) * (attr(houston,"bb")$ur.lat - attr(houston,"bb")$ll.lat)
)
HoustonMap +
stat_density2d(aes(x = lon, y = lat, fill = ..level.., alpha = ..level..),
bins = 4, geom = "polygon", data = violent_crimes)
HoustonMap +
stat_density2d(aes(x = lon, y = lat, fill = ..level.., alpha = ..level..),
bins = 4, geom = "polygon", data = violent_crimes) +
scale_fill_gradient("Violent\nCrime\nDensity")
HoustonMap +
stat_density2d(aes(x = lon, y = lat, fill = ..level.., alpha = ..level..),
bins = 4, geom = "polygon", data = violent_crimes) +
scale_fill_gradient("Violent\nCrime\nDensity") +
scale_alpha(range = c(.4, .75), guide = FALSE)
HoustonMap +
stat_density2d(aes(x = lon, y = lat, fill = ..level.., alpha = ..level..),
bins = 4, geom = "polygon", data = violent_crimes) +
scale_fill_gradient("Violent\nCrime\nDensity") +
scale_alpha(range = c(.4, .75), guide = FALSE) +
guides(fill = guide_colorbar(barwidth = 1.5, barheight = 10))
HoustonMap +
stat_density2d(aes(x = lon, y = lat, fill = ..level.., alpha = ..level..),
bins = 4, geom = "polygon", data = violent_crimes) +
scale_fill_gradient("Violent\nCrime\nDensity") +
scale_alpha(range = c(.4, .75), guide = FALSE) +
guides(fill = guide_colorbar(barwidth = 1.5, barheight = 10)) +
inset(
grob = ggplotGrob(ggplot() + overlay +
scale_fill_gradient("Violent\nCrime\nDensity") +
scale_alpha(range = c(.4, .75), guide = FALSE) +
theme_inset()
)
xmin = attr(houston,"bb")$ll.lon +
(7/10) * (attr(houston,"bb")$ur.lon - attr(houston,"bb")$ll.lon),
xmax = Inf,
ymin = -Inf,
ymax = attr(houston,"bb")$ll.lat +
(3/10) * (attr(houston,"bb")$ur.lat - attr(houston,"bb")$ll.lat)
)
ggplotGrob(ggplot() + overlay +
scale_fill_gradient("Violent\nCrime\nDensity") +
scale_alpha(range = c(.4, .75), guide = FALSE) +
theme_inset()
)
?ggplotGrob
require(gridExtra)
install.packages("gridExtra")
HoustonMap +
stat_density2d(aes(x = lon, y = lat, fill = ..level.., alpha = ..level..),
bins = 4, geom = "polygon", data = violent_crimes) +
scale_fill_gradient("Violent\nCrime\nDensity") +
scale_alpha(range = c(.4, .75), guide = FALSE) +
guides(fill = guide_colorbar(barwidth = 1.5, barheight = 10)) +
inset(
grob = ggplotGrob(ggplot() + overlay +
scale_fill_gradient("Violent\nCrime\nDensity") +
scale_alpha(range = c(.4, .75), guide = FALSE) +
theme_inset()
),
xmin = attr(houston,"bb")$ll.lon +
(7/10) * (attr(houston,"bb")$ur.lon - attr(houston,"bb")$ll.lon),
xmax = Inf,
ymin = -Inf,
ymax = attr(houston,"bb")$ll.lat +
(3/10) * (attr(houston,"bb")$ur.lat - attr(houston,"bb")$ll.lat)
)
p1 <- ggplot2::ggplot(mtcars, ggplot2::aes(wt, mpg)) + ggplot2::geom_blank()
gridExtra::grid.arrange(p1)
library(ggmap)
require(gridExtra)
HoustonMap +
stat_density2d(aes(x = lon, y = lat, fill = ..level.., alpha = ..level..),
bins = 4, geom = "polygon", data = violent_crimes) +
scale_fill_gradient("Violent\nCrime\nDensity") +
scale_alpha(range = c(.4, .75), guide = FALSE) +
guides(fill = guide_colorbar(barwidth = 1.5, barheight = 10)) +
inset(
grob = ggplotGrob(ggplot() + overlay +
scale_fill_gradient("Violent\nCrime\nDensity") +
scale_alpha(range = c(.4, .75), guide = FALSE) +
theme_inset()
),
xmin = attr(houston,"bb")$ll.lon +
(7/10) * (attr(houston,"bb")$ur.lon - attr(houston,"bb")$ll.lon),
xmax = Inf,
ymin = -Inf,
ymax = attr(houston,"bb")$ll.lat +
(3/10) * (attr(houston,"bb")$ur.lat - attr(houston,"bb")$ll.lat)
)
HoustonMap <- ggmap("houston", extent = "device", legend = "topleft")
overlay <- stat_density2d(
aes(x = lon, y = lat, fill = ..level.., alpha = ..level..),
bins = 4, geom = "polygon",
data = violent_crimes
)
HoustonMap + overlay + inset(
grob = ggplotGrob(ggplot() + overlay + theme_inset()),
xmin = -95.35836, xmax = Inf, ymin = -Inf, ymax = 29.75062
)
HoustonMap
map
extendrange(bbox)
bbox = bbox(projectExtent(chm, crs=CRS('+proj=longlat +datum=WGS84')))
bbox
extendrange(bbox)
bk_chm = get_map('massachusetts', zoom = 8, color = "bw")
plot(bk_chm)
plot(bk_chm)
get_map('massachusetts', zoom=8, color='bw')
bk_chm = get_map(
'massachusetts', zoom=8, source='stamen', maptype='toner-background')
plot(bk_chm)
chm_3857 = projectRaster(chm, crs=CRS('+init=epsg:3857'))
plot(chm_3857, add=T, legend=F, col=rev(rainbow(10, alpha = 0.35)))
bk_chm = get_map('massachusetts', zoom=5, source='stamen', maptype='toner-background')
plot(bk_chm)
bk_chm = get_map('massachusetts', zoom=5, source='stamen', maptype='toner-background')
plot(bk_chm)
bk_chm = get_map('massachusetts', zoom=10, source='stamen', maptype='toner-background')
bk_chm = get_map(chm, zoom=10, source='stamen', maptype='toner-background')
plot(bk_chm)
plot(chm_3857, add=T, legend=F, col=rev(rainbow(10, alpha = 0.35)))
bk_chm = get_map(chm, zoom=14, source='stamen', maptype='toner-background')
plot(bk_chm)
bk_chm = get_map(chm, zoom=16, source='stamen', maptype='toner-background')
plot(bk_chm)
plot(chm_3857, add=F, legend=F, col=rev(rainbow(10, alpha = 0.35)))
bk_chm = get_map(chm, zoom='auto', source='stamen', maptype='toner-background')
plot(bk_chm)
bk_chm = get_map(extent(bk_chm), zoom='auto', source='stamen', maptype='toner-background')
bk_chm = get_map(extent(chm_3857), zoom='auto', source='stamen', maptype='toner-background')
extent(chm_3857)
Extent(chm_3857)
bbox(chm_3857)
bk_chm = get_map(bbox(chm_3857), zoom='auto', source='stamen', maptype='toner-background')
plot(bk_chm)
bk_chm = get_map(bbox(chm_3857), zoom=16, source='stamen', maptype='toner-background')
plot(bk_chm)
as.vector(bbox(chm_3857))
bk_chm = get_map(as.vector(bbox(chm_3857)), zoom=16, source='stamen', maptype='toner-background')
plot(bk_chm)
bk_chm = get_map(as.vector(bbox(chm_3857)), source='stamen', maptype='toner-background')
plot(bk_chm)
bk_chm = get_map(as.vector(bbox(chm_3857)))
chm_gcs = projectRaster(chm, crs=CRS('+proj=longlat +datum=WGS84'))
bk_chm = get_map(as.vector(bbox(chm_gcs)), zoom=16, source='stamen', maptype='toner-background')
plot(bk_chm)
plot(chm_3857, add=T, legend=F, col=rev(rainbow(10, alpha = 0.35)))
plot(chm_3857, add=T)
bk_chm = get_map(as.vector(bbox(chm_gcs)), zoom=18, source='stamen', maptype='toner-background')
plot(bk_chm)
plot(chm_3857, add=T)
as.vector(bbox(chm_gcs)
as.vector(bbox(chm_gcs))
bbox(chm_gcs)
bbox(chm_gcs)[1,]
extendrange(bbox(chm_gcs)[1,], f=0.1)
c(
extendrange(bbox(chm_gcs)[1,], f=0.1),
extendrange(bbox(chm_gcs)[2,], f=0.1))[1,3,2,4]
c(
extendrange(bbox(chm_gcs)[1,], f=0.1),
extendrange(bbox(chm_gcs)[2,], f=0.1))
bb = c(
extendrange(bbox(chm_gcs)[1,], f=0.1),
extendrange(bbox(chm_gcs)[2,], f=0.1))[c(1,3,2,4)]
??extend
bb = c(
extendrange(bbox(chm_gcs)[1,], f=0.1),
extendrange(bbox(chm_gcs)[2,], f=0.1))[c(1,3,2,4)]
bk_chm = get_map(bb)
plot(bk_chm)
plot(chm_3857, add=T)
plot(chm_gcs, add=T)
bb = c(
extendrange(bbox(chm_gcs)[1,], f=0.5),
extendrange(bbox(chm_gcs)[2,], f=0.5))[c(1,3,2,4)]
bk_chm = get_map(bb)
plot(bk_chm)
plot(chm_gcs, add=T)
plot(chm_3857, add=T, legend=F, col=rev(rainbow(10, alpha = 0.35)))
bb = c(
extendrange(bbox(chm_gcs)[1,], f=1),
extendrange(bbox(chm_gcs)[2,], f=1))[c(1,3,2,4)]
bk_chm = get_map(bb)
plot(bk_chm)
plot(chm_gcs, add=T)
plot(chm_3857, add=T, legend=F, col=rev(rainbow(10, alpha = 0.35)))
bk_chm = get_map(x=chm)
plot(bk_chm)
bk_chm = get_map(location=chm)
plot(bk_chm)
bk_chm = get_map(location=bb)
ggmap(bk_chm, extent='device')
plot(chm_gcs, add=T)
plot(chm_3857, add=T, legend=F, col=rev(rainbow(10, alpha = 0.35)))
library(dismo)
install.packages("dismo")
library(dismo)
gmap(chm, type='terrain')
bk = gmap(chm, type='terrain')
plot(bk)
plot(chm_3857, add=T, legend=F, col=rev(rainbow(10, alpha = 0.35)))
rproblv <- levelplot(chm_mer, margin = FALSE, contour = TRUE, par.settings = rasterTheme(region = matlab.like(n = 10)),
alpha.regions = 0.35, at = (0:10)/10, main = "p(dep > 1kg/m2 per eruption event)")
print(rproblv)
rproblv <- rastervis::levelplot(chm_mer, margin = FALSE, contour = TRUE, par.settings = rasterTheme(region = matlab.like(n = 10)),
alpha.regions = 0.35, at = (0:10)/10, main = "p(dep > 1kg/m2 per eruption event)")
print(rproblv)
rproblv <- rastervis::levelplot(chm_mer, margin = FALSE, contour = TRUE, par.settings = rasterTheme(region = matlab.like(n = 10)),
alpha.regions = 0.35, at = (0:10)/10, main = "p(dep > 1kg/m2 per eruption event)")
install.packages("rasterVis")
library(rasterVis)
rproblv <- levelplot(chm_mer, margin = FALSE, contour = TRUE, par.settings = rasterTheme(region = matlab.like(n = 10)),
alpha.regions = 0.35, at = (0:10)/10, main = "p(dep > 1kg/m2 per eruption event)")
print(rproblv)
rproblv <- levelplot(chm_mer, margin = FALSE, contour = TRUE, par.settings = rasterTheme(region = rev(rainbow(10, alpha = 0.35))),
alpha.regions = 0.35, at = (0:10)/10, main = "p(dep > 1kg/m2 per eruption event)")
print(rproblv)
plot(chm_mer)
rproblv <- levelplot(chm_mer, margin = FALSE, contour = TRUE, par.settings = rasterTheme(region = rev(rainbow(10, alpha = 0.35))(10)),
alpha.regions = 0.35, at = (0:10)/10, main = "p(dep > 1kg/m2 per eruption event)")
print(rproblv)
max(chm_mer)
cellstats(chm_mer,max)
cellStats(chm_mer,max)
rproblv <- levelplot(
chm_mer, margin = FALSE, contour = TRUE,
par.settings = rasterTheme(region = rev(rainbow(10, alpha = 0.35))(10)),
alpha.regions = 0.35, at = 0:cellStats(chm_mer,max)/10, main = "p(dep > 1kg/m2 per eruption event)")
print(rproblv)
0:cellStats(chm_mer,max)/10
rproblv <- levelplot(
chm_mer, margin = FALSE, contour = TRUE,
par.settings = rasterTheme(region = rev(rainbow(10, alpha = 0.35))(10)),
alpha.regions = 0.35, at = seq(0,cellStats(chm_mer,max), length.out=10), main = "p(dep > 1kg/m2 per eruption event)")
print(rproblv)
rev(rainbow(10, alpha = 0.35))(10)
rev(rainbow(10, alpha = 0.35))
rproblv <- levelplot(
chm_mer, margin = FALSE, contour = TRUE,
par.settings = rasterTheme(region = rev(rainbow(10, alpha = 0.35))),
alpha.regions = 0.35, at = seq(0,cellStats(chm_mer,max), length.out=10),
main = "p(dep > 1kg/m2 per eruption event)")
print(rproblv)
rproblv <- levelplot(
chm_mer, margin = FALSE, contour = TRUE,
par.settings = rasterTheme(region = rev(rainbow(10, alpha = 0.35))),
alpha.regions = 0.35,
at = c(seq(0,cellStats(chm_mer,max), length.out=10),cellStats(chm_mer,max)),
main = "p(dep > 1kg/m2 per eruption event)")
print(rproblv)
plot(chm_mer)
print(rproblv)
rproblv <- levelplot(
chm_mer, margin = FALSE, contour = TRUE,
par.settings = rasterTheme(region = rev(rainbow(10, alpha = 0.35))),
alpha.regions = 0.35,
at = c(seq(0,cellStats(chm_mer,max), length.out=9),cellStats(chm_mer,max)),
main = "p(dep > 1kg/m2 per eruption event)")
print(rproblv)
c(seq(0,cellStats(chm_mer,max), length.out=9),cellStats(chm_mer,max))
